"""The version module.

get_version() used to get the current package version,
at both runtime and build time.

It must return the correct value in multiple contexts:

building a package (e.g. with `python -m build`)
    First look for ``progfigsite.builddata.version``,
    which will have been injected at build time by
    `progfiguration.progfigbuild.ProgfigsitePythonPackagePreparer`.
    If that fails, fall back to the default value returned by this function,

installing from a built package (e.g. a .tar.gz or .whl)
    Use ``progfigsite.builddata.version`` as above.
    This should always be present for a built package.

installing from source with progfiguration core already present (e.g. with `pip install -e .`)
    Use the default value returned by this function,
    which a very low version number.
    ``progfigsite.builddata.version`` should never be present in this case.

installing from source with progfiguration core not already present (e.g. with `pip install -e '.[development]'`)
    In this case, ``pip`` reads ``pyprojec.toml`` first,
    and calculates the version before it installs prerequisites for the ``development`` extras --
    meaning that ``progfiguration`` core is not yet installed.
    Provide a fallback for this case so that ``pip`` can still retrieve a version.

The default version should be very low.

We keep this out of the root module intentionally.
The root module contains hoststore, secretstore, and mint_version,
which might require elpers from progfiguration core.
This module needs to be directly importable by setuptools without progfiguration core.
"""


def get_version() -> str:
    """Dynamically get the package version.

    First look for ``progfigsite.builddata.version`` if it was injected at build time,
    and fall back to a default value if it was not.
    """
    try:
        from progfiguration import sitewrapper

        builddata_version = sitewrapper.site_submodule("builddata.version")
        return builddata_version.version
    except Exception as exc:
        return "0.0.1a0"
